// Auto-generated JNI loader code
// Generated by jni_generator.py
// Found 2 classes with 6 methods

JNIEXPORT jint JNI_OnLoad(JavaVM* vm, void* reserved)
{
    mosaic::core::LoggerManager::initialize();

    auto helper = mosaic::platform::agdk::JNIHelper::getInstance();

    helper->initialize(vm);

    // Load methods for com/mosaic/engine_bridge/SystemUI
    {
        auto clazzRef = helper->findClass("com/mosaic/engine_bridge/SystemUI");
        if (!clazzRef)
        {
            MOSAIC_ERROR("Failed to find SystemUI class");
            return JNI_ERR;
        }

        helper->createGlobalRef(clazzRef);

        helper->getStaticMethodID("com/mosaic/engine_bridge/SystemUI", "showQuestionDialog",
                                  "(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/Boolean;");

        helper->getStaticMethodID("com/mosaic/engine_bridge/SystemUI", "showInfoDialog",
                                  "(Ljava/lang/String;Ljava/lang/String;)V");

        helper->getStaticMethodID("com/mosaic/engine_bridge/SystemUI", "showWarningDialog",
                                  "(Ljava/lang/String;Ljava/lang/String;)V");

        helper->getStaticMethodID("com/mosaic/engine_bridge/SystemUI", "showErrorDialog",
                                  "(Ljava/lang/String;Ljava/lang/String;)V");

    }

    // Load methods for com/mosaic/engine_bridge/SystemServices
    {
        auto clazzRef = helper->findClass("com/mosaic/engine_bridge/SystemServices");
        if (!clazzRef)
        {
            MOSAIC_ERROR("Failed to find SystemServices class");
            return JNI_ERR;
        }

        helper->createGlobalRef(clazzRef);

        helper->getStaticMethodID("com/mosaic/engine_bridge/SystemServices", "setClipboard",
                                  "(Ljava/lang/String;)V");

        helper->getStaticMethodID("com/mosaic/engine_bridge/SystemServices", "getClipboard",
                                  "()Ljava/lang/String;");

    }

    return JNI_VERSION_1_6;
}

JNIEXPORT void JNICALL JNI_OnUnload(JavaVM* vm, void* /*reserved*/)
{
    mosaic::platform::agdk::JNIHelper::getInstance()->shutdown();

    mosaic::core::LoggerManager::shutdown();
}
